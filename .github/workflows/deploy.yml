name: Deploy to Staging

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image and deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USERNAME }}
        key: ${{ secrets.STAGING_SSH_KEY }}
        script: |
          # Clone/update repository
          if [ -d "awkward-website" ]; then
            cd awkward-website && git pull
          else
            git clone https://github.com/alexachks/awkward-website.git && cd awkward-website
          fi
          
          # Build Docker image locally (force rebuild without cache)
          docker build --no-cache -t awkward-media:latest .
          
          # Stop and remove existing container
          docker stop awkward-media-staging || true
          docker rm awkward-media-staging || true
          
          # Remove old images to force rebuild
          docker rmi awkward-media:latest || true
          
          # Run new container in same network as Caddy
          docker run -d \
            --name awkward-media-staging \
            --restart unless-stopped \
            --network n8n-docker_n8n \
            -p 3001:8080 \
            awkward-media:latest
          
          # Clean up old images
          docker image prune -f
          
          echo "âœ… Staging deployment successful!"